---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ $.Values.name }}
  name: {{ $.Values.name }}
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: |
      [{
        "from": {
          "kind": "ImageStreamTag",
          "name": "{{ $.Values.image.name }}:{{ $.Values.image.tag }}",
          "namespace": "{{ .Release.Namespace }}"
        },
        "fieldPath": "spec.template.spec.containers[?(@.name==\"{{ $.Values.name }}\")].image",
        "pause":"false"
      }]
spec:
  replicas: {{ $.Values.replicas | default "1" }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ $.Values.name }}
  template:
    metadata:
      labels:
        app: {{ $.Values.name }}
        name: {{ $.Values.name }}
      name: {{ $.Values.name }}-deploy
    spec:
      containers:
      - name: {{ $.Values.name }}
        image: ' '
        imagePullPolicy: Always
        ports:
          - containerPort: {{ $.Values.port }}
            protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: pki
          mountPath: "/pki"
          readOnly: true
      volumes:
      - name: pki
        secret:
          secretName: {{ $.Values.name }}-keys
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30